{"version":3,"sources":["webpack:///../react/node_modules/monaco-editor/esm/vs/basic-languages/pug/pug.js.pre-build-optimizer.js"],"names":["__webpack_require__","r","__webpack_exports__","d","conf","language","comments","lineComment","brackets","autoClosingPairs","open","close","notIn","folding","offSide","defaultToken","tokenPostfix","ignoreCase","token","keywords","tags","symbols","escapes","tokenizer","root","cases","$2@tags","@eos","@default","next","$2@keywords","include","@keywords","tag","simpleText","attributeList","whitespace","blockText","($S2\\s+.*$)","comment","string","$#==$S2","value"],"mappings":"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","file":"38.aa05894141a665d84057.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//'\n    },\n    brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n    autoClosingPairs: [\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n    ],\n    folding: {\n        offSide: true\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.pug',\n    ignoreCase: true,\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.array', open: '[', close: ']' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\n    ],\n    keywords: ['append', 'block', 'case', 'default', 'doctype', 'each', 'else', 'extends',\n        'for', 'if', 'in', 'include', 'mixin', 'typeof', 'unless', 'var', 'when'],\n    tags: [\n        'a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio',\n        'b', 'base', 'basefont', 'bdi', 'bdo', 'blockquote', 'body', 'br', 'button',\n        'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'command',\n        'datalist', 'dd', 'del', 'details', 'dfn', 'div', 'dl', 'dt',\n        'em', 'embed',\n        'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'frame', 'frameset',\n        'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html',\n        'i', 'iframe', 'img', 'input', 'ins',\n        'keygen', 'kbd',\n        'label', 'li', 'link',\n        'map', 'mark', 'menu', 'meta', 'meter',\n        'nav', 'noframes', 'noscript',\n        'object', 'ol', 'optgroup', 'option', 'output',\n        'p', 'param', 'pre', 'progress',\n        'q',\n        'rp', 'rt', 'ruby',\n        's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup',\n        'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'tracks', 'tt',\n        'u', 'ul',\n        'video',\n        'wbr'\n    ],\n    // we include these common regular expressions\n    symbols: /[\\+\\-\\*\\%\\&\\|\\!\\=\\/\\.\\,\\:]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    tokenizer: {\n        root: [\n            // Tag or a keyword at start\n            [/^(\\s*)([a-zA-Z_-][\\w-]*)/,\n                {\n                    cases: {\n                        '$2@tags': {\n                            cases: {\n                                '@eos': ['', 'tag'],\n                                '@default': ['', { token: 'tag', next: '@tag.$1' },]\n                            }\n                        },\n                        '$2@keywords': ['', { token: 'keyword.$2' },],\n                        '@default': ['', '',]\n                    }\n                }\n            ],\n            // id\n            [/^(\\s*)(#[a-zA-Z_-][\\w-]*)/, {\n                    cases: {\n                        '@eos': ['', 'tag.id'],\n                        '@default': ['', { token: 'tag.id', next: '@tag.$1' }]\n                    }\n                }],\n            // class\n            [/^(\\s*)(\\.[a-zA-Z_-][\\w-]*)/, {\n                    cases: {\n                        '@eos': ['', 'tag.class'],\n                        '@default': ['', { token: 'tag.class', next: '@tag.$1' }]\n                    }\n                }],\n            // plain text with pipe\n            [/^(\\s*)(\\|.*)$/, ''],\n            { include: '@whitespace' },\n            // keywords\n            [/[a-zA-Z_$][\\w$]*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': ''\n                    }\n                }],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/\\d+/, 'number'],\n            // strings:\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', '@string.\\''],\n        ],\n        tag: [\n            [/(\\.)(\\s*$)/, [{ token: 'delimiter', next: '@blockText.$S2.' }, '']],\n            [/\\s+/, { token: '', next: '@simpleText' }],\n            // id\n            [/#[a-zA-Z_-][\\w-]*/, {\n                    cases: {\n                        '@eos': { token: 'tag.id', next: '@pop' },\n                        '@default': 'tag.id'\n                    }\n                }],\n            // class\n            [/\\.[a-zA-Z_-][\\w-]*/, {\n                    cases: {\n                        '@eos': { token: 'tag.class', next: '@pop' },\n                        '@default': 'tag.class'\n                    }\n                }],\n            // attributes\n            [/\\(/, { token: 'delimiter.parenthesis', next: '@attributeList' }],\n        ],\n        simpleText: [\n            [/[^#]+$/, { token: '', next: '@popall' }],\n            [/[^#]+/, { token: '' }],\n            // interpolation\n            [/(#{)([^}]*)(})/, {\n                    cases: {\n                        '@eos': ['interpolation.delimiter', 'interpolation', { token: 'interpolation.delimiter', next: '@popall' }],\n                        '@default': ['interpolation.delimiter', 'interpolation', 'interpolation.delimiter']\n                    }\n                }],\n            [/#$/, { token: '', next: '@popall' }],\n            [/#/, '']\n        ],\n        attributeList: [\n            [/\\s+/, ''],\n            [/(\\w+)(\\s*=\\s*)(\"|')/, ['attribute.name', 'delimiter', { token: 'attribute.value', next: '@value.$3' }]],\n            [/\\w+/, 'attribute.name'],\n            [/,/, {\n                    cases: {\n                        '@eos': { token: 'attribute.delimiter', next: '@popall' },\n                        '@default': 'attribute.delimiter'\n                    }\n                }],\n            [/\\)$/, { token: 'delimiter.parenthesis', next: '@popall' }],\n            [/\\)/, { token: 'delimiter.parenthesis', next: '@pop' }],\n        ],\n        whitespace: [\n            [/^(\\s*)(\\/\\/.*)$/, { token: 'comment', next: '@blockText.$1.comment' }],\n            [/[ \\t\\r\\n]+/, ''],\n            [/<!--/, { token: 'comment', next: '@comment' }],\n        ],\n        blockText: [\n            [/^\\s+.*$/, {\n                    cases: {\n                        '($S2\\\\s+.*$)': { token: '$S3' },\n                        '@default': { token: '@rematch', next: '@popall' }\n                    }\n                }],\n            [/./, { token: '@rematch', next: '@popall' }]\n        ],\n        comment: [\n            [/[^<\\-]+/, 'comment.content'],\n            [/-->/, { token: 'comment', next: '@pop' }],\n            [/<!--/, 'comment.content.invalid'],\n            [/[<\\-]/, 'comment.content']\n        ],\n        string: [\n            [/[^\\\\\"'#]+/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/@escapes/, {\n                    cases: {\n                        '@eos': { token: 'string.escape', next: '@popall' },\n                        '@default': 'string.escape'\n                    }\n                }],\n            [/\\\\./, {\n                    cases: {\n                        '@eos': { token: 'string.escape.invalid', next: '@popall' },\n                        '@default': 'string.escape.invalid'\n                    }\n                }],\n            // interpolation\n            [/(#{)([^}]*)(})/, ['interpolation.delimiter', 'interpolation', 'interpolation.delimiter']],\n            [/#/, 'string'],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': { token: 'string' }\n                    }\n                }],\n        ],\n        // Almost identical to above, except for escapes and the output token\n        value: [\n            [/[^\\\\\"']+/, {\n                    cases: {\n                        '@eos': { token: 'attribute.value', next: '@popall' },\n                        '@default': 'attribute.value'\n                    }\n                }],\n            [/\\\\./, {\n                    cases: {\n                        '@eos': { token: 'attribute.value', next: '@popall' },\n                        '@default': 'attribute.value'\n                    }\n                }],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'attribute.value', next: '@pop' },\n                        '@default': { token: 'attribute.value' }\n                    }\n                }],\n        ],\n    },\n};\n"],"sourceRoot":""}